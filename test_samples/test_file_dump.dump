
a.out:     file format elf64-x86-64


Disassembly of section .init:

00000000004003a8 <_init>:
_init():
  4003a8:	48 83 ec 08          	sub    $0x8,%rsp
  4003ac:	48 8b 05 6d 05 20 00 	mov    0x20056d(%rip),%rax        # 600920 <_DYNAMIC+0x1d0>
  4003b3:	48 85 c0             	test   %rax,%rax
  4003b6:	74 05                	je     4003bd <_init+0x15>
  4003b8:	e8 43 00 00 00       	callq  400400 <__gmon_start__@plt>
  4003bd:	48 83 c4 08          	add    $0x8,%rsp
  4003c1:	c3                   	retq   

Disassembly of section .plt:

00000000004003d0 <printf@plt-0x10>:
  4003d0:	ff 35 5a 05 20 00    	pushq  0x20055a(%rip)        # 600930 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003d6:	ff 25 5c 05 20 00    	jmpq   *0x20055c(%rip)        # 600938 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003e0 <printf@plt>:
  4003e0:	ff 25 5a 05 20 00    	jmpq   *0x20055a(%rip)        # 600940 <_GLOBAL_OFFSET_TABLE_+0x18>
  4003e6:	68 00 00 00 00       	pushq  $0x0
  4003eb:	e9 e0 ff ff ff       	jmpq   4003d0 <_init+0x28>

00000000004003f0 <__libc_start_main@plt>:
  4003f0:	ff 25 52 05 20 00    	jmpq   *0x200552(%rip)        # 600948 <_GLOBAL_OFFSET_TABLE_+0x20>
  4003f6:	68 01 00 00 00       	pushq  $0x1
  4003fb:	e9 d0 ff ff ff       	jmpq   4003d0 <_init+0x28>

0000000000400400 <__gmon_start__@plt>:
  400400:	ff 25 4a 05 20 00    	jmpq   *0x20054a(%rip)        # 600950 <_GLOBAL_OFFSET_TABLE_+0x28>
  400406:	68 02 00 00 00       	pushq  $0x2
  40040b:	e9 c0 ff ff ff       	jmpq   4003d0 <_init+0x28>

Disassembly of section .text:

0000000000400410 <_start>:
_start():
  400410:	31 ed                	xor    %ebp,%ebp
  400412:	49 89 d1             	mov    %rdx,%r9
  400415:	5e                   	pop    %rsi
  400416:	48 89 e2             	mov    %rsp,%rdx
  400419:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40041d:	50                   	push   %rax
  40041e:	54                   	push   %rsp
  40041f:	49 c7 c0 f0 05 40 00 	mov    $0x4005f0,%r8
  400426:	48 c7 c1 80 05 40 00 	mov    $0x400580,%rcx
  40042d:	48 c7 c7 06 05 40 00 	mov    $0x400506,%rdi
  400434:	e8 b7 ff ff ff       	callq  4003f0 <__libc_start_main@plt>
  400439:	f4                   	hlt    
  40043a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400440 <deregister_tm_clones>:
deregister_tm_clones():
  400440:	b8 6f 09 60 00       	mov    $0x60096f,%eax
  400445:	55                   	push   %rbp
  400446:	48 2d 68 09 60 00    	sub    $0x600968,%rax
  40044c:	48 83 f8 0e          	cmp    $0xe,%rax
  400450:	48 89 e5             	mov    %rsp,%rbp
  400453:	76 1b                	jbe    400470 <deregister_tm_clones+0x30>
  400455:	b8 00 00 00 00       	mov    $0x0,%eax
  40045a:	48 85 c0             	test   %rax,%rax
  40045d:	74 11                	je     400470 <deregister_tm_clones+0x30>
  40045f:	5d                   	pop    %rbp
  400460:	bf 68 09 60 00       	mov    $0x600968,%edi
  400465:	ff e0                	jmpq   *%rax
  400467:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40046e:	00 00 
  400470:	5d                   	pop    %rbp
  400471:	c3                   	retq   
  400472:	0f 1f 40 00          	nopl   0x0(%rax)
  400476:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40047d:	00 00 00 

0000000000400480 <register_tm_clones>:
register_tm_clones():
  400480:	be 68 09 60 00       	mov    $0x600968,%esi
  400485:	55                   	push   %rbp
  400486:	48 81 ee 68 09 60 00 	sub    $0x600968,%rsi
  40048d:	48 c1 fe 03          	sar    $0x3,%rsi
  400491:	48 89 e5             	mov    %rsp,%rbp
  400494:	48 89 f0             	mov    %rsi,%rax
  400497:	48 c1 e8 3f          	shr    $0x3f,%rax
  40049b:	48 01 c6             	add    %rax,%rsi
  40049e:	48 d1 fe             	sar    %rsi
  4004a1:	74 15                	je     4004b8 <register_tm_clones+0x38>
  4004a3:	b8 00 00 00 00       	mov    $0x0,%eax
  4004a8:	48 85 c0             	test   %rax,%rax
  4004ab:	74 0b                	je     4004b8 <register_tm_clones+0x38>
  4004ad:	5d                   	pop    %rbp
  4004ae:	bf 68 09 60 00       	mov    $0x600968,%edi
  4004b3:	ff e0                	jmpq   *%rax
  4004b5:	0f 1f 00             	nopl   (%rax)
  4004b8:	5d                   	pop    %rbp
  4004b9:	c3                   	retq   
  4004ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004c0 <__do_global_dtors_aux>:
__do_global_dtors_aux():
  4004c0:	80 3d a1 04 20 00 00 	cmpb   $0x0,0x2004a1(%rip)        # 600968 <__TMC_END__>
  4004c7:	75 11                	jne    4004da <__do_global_dtors_aux+0x1a>
  4004c9:	55                   	push   %rbp
  4004ca:	48 89 e5             	mov    %rsp,%rbp
  4004cd:	e8 6e ff ff ff       	callq  400440 <deregister_tm_clones>
  4004d2:	5d                   	pop    %rbp
  4004d3:	c6 05 8e 04 20 00 01 	movb   $0x1,0x20048e(%rip)        # 600968 <__TMC_END__>
  4004da:	f3 c3                	repz retq 
  4004dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004e0 <frame_dummy>:
frame_dummy():
  4004e0:	bf 48 07 60 00       	mov    $0x600748,%edi
  4004e5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4004e9:	75 05                	jne    4004f0 <frame_dummy+0x10>
  4004eb:	eb 93                	jmp    400480 <register_tm_clones>
  4004ed:	0f 1f 00             	nopl   (%rax)
  4004f0:	b8 00 00 00 00       	mov    $0x0,%eax
  4004f5:	48 85 c0             	test   %rax,%rax
  4004f8:	74 f1                	je     4004eb <frame_dummy+0xb>
  4004fa:	55                   	push   %rbp
  4004fb:	48 89 e5             	mov    %rsp,%rbp
  4004fe:	ff d0                	callq  *%rax
  400500:	5d                   	pop    %rbp
  400501:	e9 7a ff ff ff       	jmpq   400480 <register_tm_clones>

0000000000400506 <main>:
main():
/home/saimadhav/cachediff/test_samples/test_file.c:3
  400506:	55                   	push   %rbp
  400507:	48 89 e5             	mov    %rsp,%rbp
  40050a:	48 81 ec 50 9c 00 00 	sub    $0x9c50,%rsp
/home/saimadhav/cachediff/test_samples/test_file.c:6
  400511:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400518:	eb 57                	jmp    400571 <main+0x6b>
/home/saimadhav/cachediff/test_samples/test_file.c:8
  40051a:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  400521:	eb 44                	jmp    400567 <main+0x61>
/home/saimadhav/cachediff/test_samples/test_file.c:10 (discriminator 3)
  400523:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400526:	48 63 c8             	movslq %eax,%rcx
  400529:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40052c:	48 63 d0             	movslq %eax,%rdx
  40052f:	48 89 d0             	mov    %rdx,%rax
  400532:	48 c1 e0 02          	shl    $0x2,%rax
  400536:	48 01 d0             	add    %rdx,%rax
  400539:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  400540:	00 
  400541:	48 01 d0             	add    %rdx,%rax
  400544:	48 c1 e0 02          	shl    $0x2,%rax
  400548:	48 01 c8             	add    %rcx,%rax
  40054b:	8b 84 85 b0 63 ff ff 	mov    -0x9c50(%rbp,%rax,4),%eax
  400552:	89 c6                	mov    %eax,%esi
  400554:	bf 04 06 40 00       	mov    $0x400604,%edi
  400559:	b8 00 00 00 00       	mov    $0x0,%eax
  40055e:	e8 7d fe ff ff       	callq  4003e0 <printf@plt>
/home/saimadhav/cachediff/test_samples/test_file.c:8 (discriminator 3)
  400563:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
/home/saimadhav/cachediff/test_samples/test_file.c:8 (discriminator 1)
  400567:	83 7d f8 63          	cmpl   $0x63,-0x8(%rbp)
  40056b:	7e b6                	jle    400523 <main+0x1d>
/home/saimadhav/cachediff/test_samples/test_file.c:6 (discriminator 2)
  40056d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
/home/saimadhav/cachediff/test_samples/test_file.c:6 (discriminator 1)
  400571:	83 7d fc 63          	cmpl   $0x63,-0x4(%rbp)
  400575:	7e a3                	jle    40051a <main+0x14>
  400577:	b8 00 00 00 00       	mov    $0x0,%eax
/home/saimadhav/cachediff/test_samples/test_file.c:13
  40057c:	c9                   	leaveq 
  40057d:	c3                   	retq   
  40057e:	66 90                	xchg   %ax,%ax

0000000000400580 <__libc_csu_init>:
__libc_csu_init():
  400580:	41 57                	push   %r15
  400582:	41 56                	push   %r14
  400584:	41 89 ff             	mov    %edi,%r15d
  400587:	41 55                	push   %r13
  400589:	41 54                	push   %r12
  40058b:	4c 8d 25 a6 01 20 00 	lea    0x2001a6(%rip),%r12        # 600738 <__frame_dummy_init_array_entry>
  400592:	55                   	push   %rbp
  400593:	48 8d 2d a6 01 20 00 	lea    0x2001a6(%rip),%rbp        # 600740 <__init_array_end>
  40059a:	53                   	push   %rbx
  40059b:	49 89 f6             	mov    %rsi,%r14
  40059e:	49 89 d5             	mov    %rdx,%r13
  4005a1:	4c 29 e5             	sub    %r12,%rbp
  4005a4:	48 83 ec 08          	sub    $0x8,%rsp
  4005a8:	48 c1 fd 03          	sar    $0x3,%rbp
  4005ac:	e8 f7 fd ff ff       	callq  4003a8 <_init>
  4005b1:	48 85 ed             	test   %rbp,%rbp
  4005b4:	74 20                	je     4005d6 <__libc_csu_init+0x56>
  4005b6:	31 db                	xor    %ebx,%ebx
  4005b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4005bf:	00 
  4005c0:	4c 89 ea             	mov    %r13,%rdx
  4005c3:	4c 89 f6             	mov    %r14,%rsi
  4005c6:	44 89 ff             	mov    %r15d,%edi
  4005c9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005cd:	48 83 c3 01          	add    $0x1,%rbx
  4005d1:	48 39 eb             	cmp    %rbp,%rbx
  4005d4:	75 ea                	jne    4005c0 <__libc_csu_init+0x40>
  4005d6:	48 83 c4 08          	add    $0x8,%rsp
  4005da:	5b                   	pop    %rbx
  4005db:	5d                   	pop    %rbp
  4005dc:	41 5c                	pop    %r12
  4005de:	41 5d                	pop    %r13
  4005e0:	41 5e                	pop    %r14
  4005e2:	41 5f                	pop    %r15
  4005e4:	c3                   	retq   
  4005e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4005ec:	00 00 00 00 

00000000004005f0 <__libc_csu_fini>:
__libc_csu_fini():
  4005f0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004005f4 <_fini>:
_fini():
  4005f4:	48 83 ec 08          	sub    $0x8,%rsp
  4005f8:	48 83 c4 08          	add    $0x8,%rsp
  4005fc:	c3                   	retq   
